#!/bin/bash

## this is a skeleton I am making as I work through the steps manually; to be actually written later
## helpful information:
## https://blockofcode.wordpress.com/2009/02/09/making-a-theme-for-xfwm4/

## ====== text styles ====== ##
	## Bold
	StyleBold=$(tput smso)
	StyleBoldOff=$(tput rmso)
	## Reverse
	StyleRev=$(tput rev)
	## reset all attributes
	StyleAllOff=$(tput sgr0)
	## Set some colors
	StyleFGBlue=$(tput setaf 4)		# text			= blue
	StyleFGBrWhite=$(tput setaf 15)	# text 			= bright white
	StyleBGWhite=$(tput setab 7)	# background	= white
	StyleBGBlue=$(tput setab 4)		# background	= blue
## make all the output text blue
echo "$StyleFGBlue"

## ====== declarations ====== ##
##
echo " * Declaring variables"
### Date stamps
	DateTimeStamp=$(date +"%y%m%d-%H%M%S")
	DateStamp=$(date +"%y%m%d")
	DatePlain=$(date)
###	Metadata
	WorkingDir=$PWD
	ThisScript=$(basename "$0")
	CurrentUser=$(whoami)
### Script specific requirements
	ThemeDir=$WorkingDir ## must start in `xfwm` directory! Do not run from elsewhere
echo " * ThemeDir is $ThemeDir"

## ====== fix images generated by GIMP ====== ##
##	-	put GTK color pick-up back into customized images
##	-	start with a complete set of *-active.xpm files

## move customized images into own directory
## NOTE	-	might be better to start with this as it makes more sense
##			considering an existing theme where edits are being made.
# mkdir active && mv *-active.xpm active/

echo " * entering active/ - this directory is where I will get the base images"
cd active

## Determine the appropriate find/replace strings (look in files)
##	-	By excluding the charecter definitions from the query,
##		it is not neccissary to fiddle with them; can leave whatever
##		GIMP defined
	## FIND: (in plain text); for reference
	# " 	c #000000",
	# ".	c #0000EE",
	# "+	c #000088",
	# "@	c #000044",
	# "#	c #FFFFFF",
		## FIND (same as above, but only required bits):
		# #000000"
		# #0000EE"
		# #000088"
		# #000044"
		# #FFFFFF"
	##
	## REPLACE WITH (in plain text); for reference ->
	# " 	c #000000",
	# ".	c #0000EE s active_hilight_1",
	# "+	c #000088 s active_color_1",
	# "@	c #000044 s active_shadow_1",
	# "#	c #FFFFFF s active_text_color",
		## REPLACE (same as above,but only required bits):
		# #000000",
		# #0000EE s active_hilight_1"
		# #000088 s active_color_1"
		# #000044 s active_shadow_1"
		# #FFFFFF s active_text_color"

## Find and replace the color definition headers in images
##	-	must leave trailing double quote to prevent the operation
## 		accidentaly being run more than once on the same line; the
## 		double quote indicates the *definate* end of the line
## 	-	must leave the -e at start of each line; it won't work if
##		put into the main command only once
##	-	NOTE this is duplicated for the *-pressed.xpm files below,
##	-	any changes shouldbe updated there as well.
echo " * adding GTK color pickup to known colors"
sed -i \
-e 's/FIND"/REPLACE"/g' \
-e 's/#0000EE"/#0000EE s active_hilight_1"/g' \
-e 's/#000088"/#000088 s active_color_1"/g' \
-e 's/#000044"/#000044 s active_shadow_1"/g' \
-e 's/#FFFFFF"/#FFFFFF s active_text_color"/g' \
*-active.xpm

## ====== create the inactive images ====== ##

## go back to parent directory
echo " * returning to base theme direcory $ThemeDir"
cd $ThemeDir
pwd

## delete any existing inactve/ directory
echo " * trash existing inactive/ directory, if present"
trash inactive
## duplicate the active/ directory to inactive/
echo " * copy active/ to inactive/ and enter directory"
cp -r active inactive
## enter inactive directory
cd inactive
pwd

## change filenames
##	-	must include the backslash escape or will give error
##		(even with double quotes)
#
# exa
echo " * rename all these files from *-active.xpm to *-inactive.xpm"
rename "active" "inactive" *
# exa

## Run find/replace
##	-	Will leave color codes the same, only change the GTK
##		color pickups
##	-	Therefor: if the theme is ever applied without colors
##		being defined externally, there would be no difference
##		between active and inactive colors
##	Two things being done here:
## 		1. change the GTK color pickup names from active to
##		inactive
## 		2. change the first non-commented line of file, for
##		example:
## 			static char * close_active_xpm[] = {
## 			REPLACE W-->
## 			static char * close_inactive_xpm[] = {
#
sed -i \
-e 's/s active_/s inactive_/g' \
-e 's/_active_xpm/_inactive_xpm/g' \
*-inactive.xpm


## Find and replace the color definition headers in images
##	-	must leave trailing double quote to prevent the operation
## 		accidentaly being run more than once on the same line; the
## 		double quote indicates the *definate* end of the line
## 	-	must leave the -e at start of each line; it won't work if
##		put into the main command only once
# sed -i \
# -e 's/FIND"/REPLACE"/g' \
# -e 's/#0000EE"/#0000EE s active_hilight_1"/g' \
# -e 's/#000088"/#000088 s active_color_1"/g' \
# -e 's/#000044"/#000044 s active_shadow_1"/g' \
# -e 's/#FFFFFF"/#FFFFFF s active_text_color"/g' \
# *-active.xpm


## ====== create the beginings for pressed images ====== ##
#
## go back to parent directory
echo " * returning to base theme direcory $ThemeDir"
cd $ThemeDir

## delete any existing pressed/ directory
echo " * trash existing pressed/ directory, if present"
trash pressed
## duplicate the active/ directory to pressed/
echo " * copy active/ to pressed/ and enter directory"
cp -r active pressed
## enter inactive directory
cd pressed
pwd

## change filenames
# exa
echo " * rename all these files from *-active.xpm to *-pressed.xpm"
rename "active" "pressed" *
# exa
#
## Run find/replace
##	-	Will leave color codes the same, only change the GTK
##		color pickups
##	-	Therefor: if the theme is ever applied without colors
##		being defined externally, there would be no difference
##		between active and inactive colors
##	In contrast to creating the *-inactive state images, only ONE
##	 thing being done here:
## 		1. change the first non-commented line of file, for
##		example:
## 			static char * close_active_xpm[] = {
## 			REPLACE W-->
## 			static char * close_pressed_xpm[] = {
##	The colors REMAIN THE SAME - edit the actual image so it changes,
##	rather than the colors.
echo " * Just changing the filename as mentioned inside the file itself"
sed -i \
-e 's/_active_xpm/_inactive_xpm/g' \
*-pressed.xpm

## Find and replace the color definition headers in images
##	-	see notes in section where sed is first used, above
##	-	This is primarily for use after images have been hand-edited
#
# sed -i \
# -e 's/FIND"/REPLACE"/g' \
# -e 's/#0000EE"/#0000EE s active_hilight_1"/g' \
# -e 's/#000088"/#000088 s active_color_1"/g' \
# -e 's/#000044"/#000044 s active_shadow_1"/g' \
# -e 's/#FFFFFF"/#FFFFFF s active_text_color"/g' \
# *-pressed.xpm










## ====== move all files into main theme directory ====== ##
##
## will overwrite any existing files. add -i for interative mode
## which would prompt before destroying anything.
echo " * Returning to parent directory"
cd $ThemeDir
echo " * Removing existing files ending in -active.xpm, -inactive.xpm and -pressed.xpm"
trash *-active.xpm
trash *-inactive.xpm
trash *-pressed.xpm
echo " * Copying files from active/, inactive/ and pressed/ into main theme directory"
cp active/*.xpm .
cp inactive/*.xpm .
cp pressed/*.xpm .

echo done!











